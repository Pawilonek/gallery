function routes($routeProvider){$routeProvider.when("/page/:pageId/:pageSlug",{templateUrl:"partials/pages.html",controller:"pagesCtrl"}).when("/galleries",{templateUrl:"partials/gallery-list.html",controller:"galleriesCtrl"}).when("/galleries/:galleryId/:gallerySlug",{templateUrl:"partials/gallery.html",controller:"galleriesCtrl"}).when("/admin",{templateUrl:"partials/admin/index.html",controller:"adminCtrl"}).when("/admin/galleries/:galleryId",{templateUrl:"partials/admin/gallery.html",controller:"adminGalleryCtrl"}).otherwise({redirectTo:"/page/1/home"})}var galleryApp=angular.module("galleryApp",["ngRoute","ngResource","ngStorage","layoutsService","authController","galleriesController","galleriesService","authModalController","adminController","angularFileUpload","filesService","ui.bootstrap","ckeditor","pagesController","pagesService"]);galleryApp.config(routes),angular.module("galleryApp").controller("AlertCtrl",["$scope","$rootScope",function($scope,$rootScope){$scope.alerts=[],$scope.addAlert=function(){$scope.$broadcast("alert",{type:"success",msg:"test!!"})},$scope.closeAlert=function(index){$scope.alerts.splice(index,1)},$rootScope.$on("alert",function(event,param){$scope.alerts.push(param)})}]),galleryApp.directive("fillWithImage",function(){return function(scope,element,attrs){var url=attrs.fillWithImage;url=url.replace(/\\/g,"/"),element.css({"background-image":"url("+url+")","background-size":"cover"})}}),galleryApp.directive("focusMe",function($timeout){return function(scope,element,attr){attr.$observe("focusMe",function(value){"true"===value&&$timeout(function(){element[0].focus()})})}}),jQuery(document).ready(function($){var $body=$("body");$body.on("click",".navbar-collapse a",function(){$(".navbar-collapse").collapse("hide")}),$body.on("mouseup","a",function(){$(this).blur()})});var adminController=angular.module("adminController",[]);adminController.controller("adminCtrl",["$scope","$rootScope","$location","FileUploader",function($scope,$rootScope,$location,FileUploader){$scope.init=function(){return null==$rootScope.authToken?($location.path("/"),!1):void 0};var uploader=$scope.uploader=new FileUploader({url:config.apiUrl+"images.json",method:"POST",headers:{Authorization:$rootScope.authToken}});uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),uploader.onWhenAddingFileFailed=function(item,filter,options){console.info("onWhenAddingFileFailed",item,filter,options)},uploader.onAfterAddingFile=function(fileItem){console.info("onAfterAddingFile",fileItem),fileItem.upload()},uploader.onAfterAddingAll=function(addedFileItems){console.info("onAfterAddingAll",addedFileItems)},uploader.onBeforeUploadItem=function(item){console.info("onBeforeUploadItem",item)},uploader.onProgressItem=function(fileItem,progress){console.info("onProgressItem",fileItem,progress)},uploader.onProgressAll=function(progress){console.info("onProgressAll",progress)},uploader.onSuccessItem=function(fileItem,response,status,headers){console.info("onSuccessItem",fileItem,response,status,headers)},uploader.onErrorItem=function(fileItem,response,status,headers){console.info("onErrorItem",fileItem,response,status,headers)},uploader.onCancelItem=function(fileItem,response,status,headers){console.info("onCancelItem",fileItem,response,status,headers)},uploader.onCompleteItem=function(fileItem,response,status,headers){console.info("onCompleteItem",fileItem,response,status,headers)},uploader.onCompleteAll=function(){console.info("onCompleteAll")},console.info("uploader",uploader)}]),adminController.controller("adminGalleryCtrl",["$scope","$routeParams","$location","File","Layout","Gallery",function($scope,$routeParams,$location,File,Layout,Gallery){$scope.images=[],$scope.layouts=[],$scope.gallery={},$scope.addImage=function(imageId){var layout=new Layout;layout.image_id=imageId,layout.gallery_id=$routeParams.galleryId,layout.$save(function(){$scope.loadLayouts()})},$scope.loadLayouts=function(){Gallery.get({id:$routeParams.galleryId},function(response){$scope.gallery=response.gallery,$scope.layouts=response.gallery.layouts})},$scope.init=function(){$scope.loadImages(),$scope.loadLayouts(),$(".adminLayout").droppable({greedy:!0,tolerance:"touch",drop:function(event,ui){$scope.addImage(ui.helper[0].dataset.id)}})},$scope.loadImages=function(){File.get(function(response){$scope.images=response.images,setTimeout(function(){$(".uploadedImages").draggable({appendTo:"body",helper:"clone"})},1e3)},function(response){console.log(response)})},$scope.deleteLayout=function(id){Layout["delete"]({layoutId:id},function(){$scope.loadLayouts()})}}]),angular.module("authController",[]).controller("authenticationsCtrl",function($scope,$rootScope,$location,$modal){const ROLE_ADMIN="admin";$scope.user=null,$scope.init=function(){$scope.login()},$scope.login=function(authToken){authToken=authToken||localStorage.getItem("authToken"),null!==authToken&&($rootScope.authToken=authToken,$scope.user=jwt_decode($rootScope.authToken))},$scope.logout=function(){$rootScope.authToken=null,$scope.user=null,localStorage.removeItem("authToken")},$rootScope.isLoggedIn=function(){return null!=$scope.user},$rootScope.isAdmin=function(){return $scope.user?$scope.user.role===ROLE_ADMIN:!1},$scope.openModal=function(){var modalInstance=$modal.open({animation:!0,templateUrl:"partials/modals/loginModal.html",controller:"authModalCtrl"});modalInstance.result.then(function(){$scope.login($rootScope.authToken)},function(){})},$scope.$on("sessionExpired",function(){$scope.$emit("alert",{type:"danger",msg:"Twoja sesja wygasła."}),$scope.logout()})}).factory("authInterceptor",function($rootScope,$q){return{request:function(config){return config.headers=config.headers||{},$rootScope.authToken&&(config.headers.Authorization=$rootScope.authToken),config},responseError:function(response){return $q.reject(response)}}}).config(function($httpProvider){$httpProvider.interceptors.push("authInterceptor")}),angular.module("authModalController",[]).controller("authModalCtrl",function($scope,$modalInstance,$http,$rootScope,$sce){$scope.errorMessage="",$scope.defaultButtonValue=$sce.trustAsHtml("zaloguj"),$scope.spinner=$sce.trustAsHtml('<i class="fa fa-spin fa-spinner"></i>'),$scope.buttonValue=$scope.defaultButtonValue,$scope.User={username:"",password:""},$scope.login=function(){if(!$scope.User.username||!$scope.User.password)return void($scope.errorMessage="Podaj login i/lub hasło!");$scope.buttonValue=$scope.spinner;var data={username:$scope.User.username,password:$scope.User.password};$http.post(config.apiUrl+"users/login",data).then(function(response){return $scope.buttonValue=$scope.defaultButtonValue,response.data.token?($rootScope.authToken=response.data.token,localStorage.setItem("authToken",response.data.token),void $modalInstance.close()):void($scope.errorMessage="Wystąpił nieznany błąd.")},function(response){return $scope.buttonValue=$scope.defaultButtonValue,401==response.status?void($scope.errorMessage="Niepoprawny login i/lub hasło."):void($scope.errorMessage="Wystąpił nieznany błąd.")})},$scope.dismissModal=function(){$modalInstance.dismiss("cancel")}}),angular.module("galleriesController",[]).controller("galleriesCtrl",function($scope,$routeParams,$sce,Gallery){$scope.galleries=[],$scope.gallery={},$scope.editedGalleryId=-1,$scope.defaultButtonValue=$sce.trustAsHtml("dodaj"),$scope.spinner=$sce.trustAsHtml('<i class="fa fa-spin fa-spinner"></i>'),$scope.buttonValue=$scope.defaultButtonValue,$scope.newGallery="",$scope.addGallery=function(){if($scope.buttonValue=$scope.spinner,!$scope.newGallery)return!1;var gallery=new Gallery;gallery.name=$scope.newGallery,$scope.newGallery="",gallery.$save(function(){$scope.buttonValue=$scope.defaultButtonValue,$scope.loadGalleries()},function(){$scope.buttonValue=$scope.defaultButtonValue})},$scope.loadGalleries=function(){Gallery.get(function(response){$scope.galleries=response.galleries},function(response){console.log(response)})},$scope.loadGallery=function(){Gallery.get({id:$routeParams.galleryId},function(response){$scope.gallery=response.gallery},function(response){console.log(response)})},$scope.deleteGallery=function(galleryId){Gallery["delete"]({id:galleryId},function(response){$scope.$emit("alert",{type:"success",msg:"Galeria została usunięta."}),$scope.loadGalleries()})},$scope.editGallery=function(galleryId){$scope.editedGalleryId=galleryId},$scope.saveChanges=function(index){console.log(index);var gallery=new Gallery;gallery.id=$scope.galleries[index].id,gallery.name=$scope.galleries[index].name,gallery.save(),$scope.editedGalleryId=-1}});var layoutsController=angular.module("layoutsController",[]);layoutsController.controller("layoutsCtrl",["$scope","Layout",function($scope,Layout){$scope.images={},$scope.saveeee=function(layout){console.log(layout),layout.position_x=500,Layout.update({layoutId:layout.id},layout,function(data){console.log(data)})},$scope.LoadLayout=function(){Layout.get(function(data){angular.forEach(data.layouts,function(value,key){data.layouts[key].style={position:"absolute",width:value.Layout.size_x+"px",height:value.Layout.size_y+"px",left:value.Layout.position_x+"px",top:value.Layout.position_y+"px"}}),$scope.images=data.layouts})},$scope.init=function(){$scope.LoadLayout()}}]),angular.module("pagesController",[]).controller("pagesCtrl",function($scope,$rootScope,$sce,Page,$routeParams){$scope.options={language:"pl",allowedContent:!0,entities:!1},$scope.page=null,$scope.init=function(){$scope.loadPage()},$scope.savePage=function(){if($scope.page){var page=new Page;page.id=$scope.page.id,page.body=$scope.page.body,page.save()}},$scope.$watch("page.body",function(newValue,oldValue){$scope.contentSafe=$sce.trustAsHtml(newValue)}),$scope.loadPage=function(){Page.get({id:$routeParams.pageId},function(response){var page=response.page;$scope.page=page,$scope.contentSafe=$sce.trustAsHtml(page.body)},function(response){console.log(response)})}});var layoutsService=angular.module("layoutsService",["ngResource"]);layoutsService.factory("Layout",["$resource",function($resource){return $resource(config.apiUrl+"layouts/:layoutId.json",{layoutId:""},{update:{method:"PUT"}})}]);var galleriesService=angular.module("galleriesService",["ngResource"]);galleriesService.factory("Gallery",["$resource",function($resource){var galleries=$resource(config.apiUrl+"galleries/:id.json",{id:"@id"},{update:{method:"PUT"}});return galleries.prototype.save=function(){return this.id?this.$update():this.$save()},galleries}]);var pagesService=angular.module("pagesService",["ngResource"]);pagesService.factory("Page",["$resource",function($resource){var pages=$resource(config.apiUrl+"pages/:id.json",{id:"@id"},{update:{method:"PUT"}});return pages.prototype.save=function(){return this.id?this.$update():this.$save()},pages}]);var filesService=angular.module("filesService",["ngResource"]);filesService.factory("File",["$resource",function($resource){return $resource(config.apiUrl+"images/:fileId.json",{fileId:""},{update:{method:"PUT"}})}]);